<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[One is Mine]]></title><description><![CDATA[A starter blog demonstrating what Gatsby can do.]]></description><link>https://oneismine.com/</link><generator>RSS for Node</generator><lastBuildDate>Sun, 30 Dec 2018 03:15:48 GMT</lastBuildDate><item><title><![CDATA[Top 10 Shapeless Resources]]></title><description><![CDATA[Intro What is shapeless?  Well its a library for doing generic programming in Scala.  What is generic programming, well that is a little…]]></description><link>https://oneismine.com//shapeless/</link><guid isPermaLink="false">https://oneismine.com//shapeless/</guid><pubDate>Wed, 26 Dec 2018 23:46:37 GMT</pubDate><content:encoded>&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;What is shapeless?  Well its a library for doing generic programming in Scala.  What is generic programming, well that is a little harder to explain.  Generic programming is the type of polymorphism your lanugage doesn’t support. That is how it was described by Simon Peyton.  &lt;/p&gt;
&lt;p&gt;To me, that description seems like circular reasoning, but hopefully it will all make sense by the time you get to the end of this list.&lt;/p&gt;
&lt;h3&gt;1. &lt;a href=&quot;https://underscore.io/books/shapeless-guide/&quot;&gt;The Type Astronaut’s Guide to Shapeless Book&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This free ebook from underscore walks through shapeless in some fun detail.  I recommend after reading it you attempt to build your CSV parser and after that try your own Json parser using the techniques learned in the book.&lt;/p&gt;
&lt;h3&gt;2. &lt;a href=&quot;https://gitter.im/milessabin/shapeless&quot;&gt;The Shapeless Gitter channel&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you have questions after reading the shapeless book. Gitter is a great place to go. &lt;/p&gt;
&lt;h3&gt;3. &lt;a href=&quot;https://www.scala-exercises.org/shapeless/generic&quot;&gt;Shapeless Exercises&lt;/a&gt;.&lt;/h3&gt;
&lt;p&gt;Scala Exercises has a whole section of shapeless exercises that you can use to cement your knowledge of the shapeless library.&lt;/p&gt;
&lt;h3&gt;4. &lt;a href=&quot;https://corecursive.com/008-generic-programming-and-shapeless-with-miles-sabin/&quot;&gt;Generic Programming and Shapeless with Miles Sabin&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this interview with Miles Sabbin, the creator of shapeless, he explains how he created shapeless and also the reason why he created it.  The why is actually a pretty interesting story.&lt;/p&gt;
&lt;h3&gt;5. &lt;a href=&quot;https://medium.com/build-and-learn/is-shapeless-worth-it-what-is-shapeless-anyway-900cba6b717a&quot;&gt;Is Shapeless worth it?&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An article tackling whether using shapeless is worth it.  Spoiler alert, it is if you like type safey and avoid boiler plate.&lt;/p&gt;
&lt;h3&gt;6. &lt;a href=&quot;https://jto.github.io/articles/getting-started-with-shapeless/&quot;&gt;Getting Started with Shapeless&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;@skaalf’s guide to getting started with shapeless.&lt;/p&gt;
&lt;h3&gt;7. &lt;a href=&quot;https://twitter.com/milessabin&quot;&gt;@milessabin&lt;/a&gt; Miles Sabin on twitter.&lt;/h3&gt;
&lt;p&gt;Here is Miles on twitter. Follow him to keep up to date not just on shapeless but on many exicting type level projects.&lt;/p&gt;
&lt;h3&gt;8. &lt;a href=&quot;https://www.youtube.com/watch?v=xG00ivPa9hk&quot;&gt;Code Mesh Kind PolyMorphism Talk&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a bit of reach. But let’s say it will be intereting to those of us interested in Shapeless.&lt;/p&gt;
&lt;h3&gt;9. &lt;a href=&quot;https://www.youtube.com/watch?v=Zt6LjUnOcFQ&quot;&gt;The Type Astronaut’s Guide to Shapeless Video&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here is a video version of the first link.&lt;/p&gt;
&lt;h3&gt;Wrapping up:&lt;/h3&gt;
&lt;p&gt;There we go.  So shapeless is geneic programming and generic programming is the type of polymorphism your lanuage doesn’t support.  I hope I’ve given you some resources to learn about shapeless and generic programming.  &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Top 10 Tech Podcasts]]></title><description><![CDATA[Intro I listen to a lot of podcasts.  Tech podcasts if done well are such a great resource.  It can be like listening to super smart…]]></description><link>https://oneismine.com//tech-podcasts/</link><guid isPermaLink="false">https://oneismine.com//tech-podcasts/</guid><pubDate>Wed, 26 Dec 2018 23:46:37 GMT</pubDate><content:encoded>&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;I listen to a lot of podcasts.  Tech podcasts if done well are such a great resource.  It can be like listening to super smart colleagues discussing and explaining concepts.  It’s also great when its just people you like shooting the breeze and hangning out.  Here is a list of some of my favorites.&lt;/p&gt;
&lt;h3&gt;1. &lt;a href=&quot;https://softwareengineeringdaily.com/&quot;&gt;Software Engineering Daily&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With one episdoe a business day, and a focused format, Jeff at one of my favorite podcast Hosts. My first podcast interview was as a guest host on SEDaily. Jeff taught me the ropes of constructing an outline for any interview. I can’t say enough good things about this podcast. SEDaily also has topic specific feeds, which are great if you want to binge on certain topic. I don’t know how you do an epsidoes a day Jeff, Bravo.&lt;/p&gt;
&lt;h3&gt;2. &lt;a href=&quot;https://dataskeptic.com&quot;&gt;Data Skeptic&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’m not sure how I got subscribed to data skeptic, as a I’m not a data scientist of any sort.  But I’m glad I am.  My favorite thing is the miny epsidoes where Kyle explains a concept to Linh Da.  I think it is very impressive that she comes to these cold. To me that is a frightening endevaour.  Kyle also is a great explainer of concepts and the order these mine epsidoes of explaination are rolled out are carefullly planned to lead to maximum listener comprehension.&lt;/p&gt;
&lt;h3&gt;3. &lt;a href=&quot;http://corecursive.com&quot;&gt;CoRecursive&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is my podcast.  Jeff at SEDaily gave me the format, in depth technical interviews.  I try to interview smart people about technical topics that are deep and avoid tech news and trivia.  I also try to keep it casual in tone.  Whether I succeed at all or any of these is an open question, but doing the interviews has been so much fun.&lt;/p&gt;
&lt;h3&gt;4. &lt;a href=&quot;https://mappingthejourney.com/&quot;&gt;Mapping The Journey&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’m not sure if this podcast is still being made but some heavy hitters have been interviewed.  The creators of Java, C++, OpenSSL, NodeJS, SQL and several more heavy hitters have been interviewed.&lt;/p&gt;
&lt;h3&gt;5. &lt;a href=&quot;https://dotnetrocks.com/&quot;&gt;.Net Rocks&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sometime aroudn 2005 I got an Ipod.  The first podcast I listened to was The Daily Source Code with Adam Curry, but mainly I recall it being about podcasts and podcasting.  .Net Rocks was as fun interview show about .net and since I had recently started writing C# for a living, I jump on this one write away. Its been a long time since I was loyallying consuming every episode but .Net Rocks taught me what a great tech podcast can be.&lt;/p&gt;
&lt;h3&gt;6. &lt;a href=&quot;https://newrustacean.com/&quot;&gt;New Rustacean&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chris has this podcast about learning Rust.  And he just narrates it to the listener.  I think that is just such an challenging and intimate format and Chris pulls it off everytime. &lt;/p&gt;
&lt;h3&gt;7. &lt;a href=&quot;http://thescalawags.libsyn.com/&quot;&gt;ScalaWags&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Fun group interviews about scala.  No longer being made, but this was a great podcast.&lt;/p&gt;
&lt;h3&gt;8. &lt;a href=&quot;https://www.haskellcast.com/&quot;&gt;HaskellCast&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Very few epsidoes of this podcast were ever made, but when they were made I was pretty focused on learning haskell.  I think they should pick it back up.&lt;/p&gt;
&lt;h3&gt;9. &lt;a href=&quot;https://www.functionalgeekery.com/&quot;&gt;Functional Geekery&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Protocor loves clojure and elixir and Erlang.  Dynamically typed functional programming is his thing and he brings on great guests to discuss functional programming and with a specific focus on dynamically typed languages.&lt;/p&gt;
&lt;h3&gt;10. &lt;a href=&quot;https://www.hanselminutes.com&quot;&gt;Hanselminutes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As I remember it, Scott Hanselman was a guest on .Net Rocks and from there spun out into his own podcast.  A HanselMinute was a joke unit of measure, based on Scotts estimates of how long something would take being wildly optimistic.  Scott is still making his show and its better than ever.  I can’t say I listen to every episode, I haven’t been a .Net / Windows developer in some time and I still assoicate him with that demographic.  I still find Scott to be an inspriation though and much like .Net Rocks, he taught me what a great tech podcast could be.  Without that, I wouldn’t be conducting my own interviews today. &lt;/p&gt;
&lt;p&gt;There we go. This is a list of tech podcasts that inspire me.  They inspired me so much that I now have my own podcast.  What tech podcasts do you like, let me know on twitter. &lt;/p&gt;</content:encoded></item><item><title><![CDATA[About && Contribute]]></title><description><![CDATA[Listicles on software developement where one item must be by the author.   About One is mine features articles in the form of top 10 lists…]]></description><link>https://oneismine.com//about/</link><guid isPermaLink="false">https://oneismine.com//about/</guid><pubDate>Sun, 23 Dec 2018 23:46:37 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Listicles on software developement where one item must be by the author.&lt;/strong&gt; &lt;/p&gt;
&lt;h3&gt;About&lt;/h3&gt;
&lt;p&gt;One is mine features articles in the form of top 10 lists (or top N lists).  One item in the list must be created or contributed to by the author.  This so called listical format, while often maligned, is a great format for experts to share resources.&lt;/p&gt;
&lt;h3&gt;Contribute&lt;/h3&gt;
&lt;p&gt;Have you worked on an open source project? Have you written a techincal blog post? Are you a great person to follow for news about a specific niche of software development?&lt;/p&gt;
&lt;p&gt;If any of those match you, then you are qualified to write a brief list style article highlighting some important resources in your area of expertise. And since this is One is Mine, one of the items in the list must be something you have worked on yourself.&lt;/p&gt;
&lt;p&gt;So, write some useful content for the community and at the same time, tell people about your project, your website, your article or book or work in progress.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/oneismine/oneismine.github.io/blob/source/README.md&quot;&gt;Read More&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;I created this website with GatsbyJs as vehicle for me to share some of my thoughts using a simple Top N format.  As an Author with little writting experience I find this format freeing and I think that other people will find it similarly freeing.&lt;/p&gt;</content:encoded></item></channel></rss>